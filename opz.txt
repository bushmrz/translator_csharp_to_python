a 10 = INT
a 20 =
b "20" = STRING
abs "c" = CHAR
count 0 = INT
VOID something FUNCTION(0) VOID PROC_START "Hello" PRINT PROC_END
"Test calling function that prints Hello" PRINT
something CALL
c 10 = INT
"Test: 10 + 10:" PRINT
a c + PRINT
arr ( 1 2 3 2 3 4 ARRAY LENGTH(6) = INT_ARRAY
"Printing arr = [1, 2, 3, 2, 3, 4]:" PRINT
arr PRINT
"Printing arr[1]:" PRINT
arr INDEX(1) GET PRINT
"Changing arr[1] to 20:" PRINT
arr INDEX(1) 20 =
arr INDEX(1) GET PRINT
testBool True = BOOL
testBool2 False = BOOL
False testBool2 testBool && || MARK_1 COND_JUMP BLOCK_START "if went to true" PRINT BLOCK_END MARK_2 UNCOND_JUMP MARK_1: BLOCK_START "if went to false" PRINT BLOCK_END MARK_2:
count1 2 = INT
count 5 < LOOP_MARK COND_JUMP BLOCK_START count 1 += count1 2 *= BLOCK_END LOOP_MARK:
count PRINT
count1 PRINT
( Some CLASS (INT sum a INT b INT FUNCTION(2) INT PROC_START a b + RETURN PROC_END) )
( Something CLASS < Some PARENTCLASS (VOID test FUNCTION(0) VOID PROC_START "Calling parent class method:" PRINT sumResult BASE.sum 10 5 CALL = INT sumResult PRINT PROC_END) )
Something CALL test CALL
( EmptyClass CLASS () )
